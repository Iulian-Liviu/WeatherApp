// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using WeatherApp.Models;
//
//    var weatherCodes = WeatherCodes.FromJson(jsonString);

namespace WeatherApp.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;



    public class WeatherCodes
    {
        public async static Task<Dictionary<string, string>> GetValuePairs() {

            using var stream = await FileSystem.OpenAppPackageFileAsync("weathercodes.json");
            using var reader = new StreamReader(stream);

            var contents = reader.ReadToEnd();
            return JsonConvert.DeserializeObject<Dictionary<string, string>>(contents, WeatherApp.Models.ConverterCodes.Settings); 
            
        }
    }


    internal static class ConverterCodes
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
